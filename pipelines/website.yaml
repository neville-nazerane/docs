pool: hosted-linux

pr: none

trigger:
  branches:
    include:
      - master
  paths:
    include:
      - src

variables:
  projectPath: src/Docs.WebApp
  projectName: Docs.WebApp
  deploymentDestDirectory: /var/www/docs

stages:
  - stage: 
    displayName: Build Blazor
    jobs:

    - job: Compile
      steps:

      - script: |
          dotnet publish $(projectPath) -c release -o published
          mkdir -p compressed
          tar -czf compressed/$(projectName).tar.gz -C published .
        displayName: Publishing Website

      - publish: compressed
        displayName: Publish for release
        artifact: published

  - stage: CD
    displayName: Deploy to the VM

    jobs:
      - deployment: Deployment
        displayName: Deploy to Development VM
        environment:
          name: Development
          resourceType: VirtualMachine
          resourceName: Web Server
        strategy:
          runOnce:
            deploy:
              steps:

                - checkout: none

                # - script: ls

                - download: current
                  displayName: download published artifact
                  artifact: published

                - script: |
                    sudo rm -rf $(deploymentDestDirectory)
                    sudo mkdir -p $(deploymentDestDirectory)
                    sudo tar -xzf $(projectName).tar.gz -C $(deploymentDestDirectory)

                    rm -rf *
                  displayName: Unzipping website into destination folder
                  workingDirectory: $(Pipeline.Workspace)/published
                  failOnStderr: true

      
                - task: DeleteFiles@1
                  displayName: Clean up
                              

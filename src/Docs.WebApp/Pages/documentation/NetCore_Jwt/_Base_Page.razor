@page "/documentation/NetCore_Jwt/"

<MainSection Title="Setup" Id="setup" Icon="fa-cogs">

    <Description>
        <p>
            This library provides an easy way to access and control JWT authentication. It allows you to have a single configuration
            for your tokens in your startup, and generate tokens via dependency injection in your code.
        </p>
    </Description>

    <Content>

        <Startup />

        <Configurations />

    </Content>

</MainSection>

<MainSection Title="Usage" Id="usage" Icon="fa-barcode">

    <Description>
        A token can be generated within any service by injecting <code>IBearerManager</code>. With this service, you can
        generate a new token with just the username (and/or roles), by passing in the claims or by passing the whole
        claims identity.
    </Description>

    <Content>
        <CSharp>bearerManager.Generate("myUserName");
    bearerManager.Generate("myUserName", new string[]{ "admin" });
    bearerManager.Generate(new Claim[]{  });
    bearerManager.Generate(myClaimIdentity);</CSharp>

        <p>
            All above overloads also work as an extension function <code>GenerateBearerToken</code> for the <code>HttpContext</code>.
        </p>
    </Content>
</MainSection>